{"version":3,"file":"Emitter.js","sources":["../src/modules/Emitter.ts"],"sourcesContent":["/**\r\n * @private\r\n */\r\ninterface IEmitterEvent {\r\n\tfunc: Function,\r\n\tonce: boolean\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\ntype Events = { [type: string]: IEmitterEvent[] };\r\n\r\nexport type EmitterCallback = (...args: any[]) => void;\r\n\r\nexport class Emitter {\r\n\tprivate _events: Events = {};\r\n\t\r\n\t/**\r\n\t * Registered event names.\r\n\t * @since 1.1.1\r\n\t */\r\n\tget eventNames(): string[] {\r\n\t\treturn Object.keys(this._events);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Register event.\r\n\t * \r\n\t * @param type Event type.\r\n\t * @param func Callback when the event fires.\r\n\t * @param once Whether one-time event.\r\n\t * @return Returns itself for the method chaining.\r\n\t */\r\n\tprivate _on(type: string, func: EmitterCallback, once: boolean): Emitter {\r\n\t\tif (!type || !func) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tconst events: IEmitterEvent[] = this._events[type] = this._events[type] || [];\r\n\t\t\r\n\t\tfor (let i: number = 0; i < events.length; i++) {\r\n\t\t\tif (events[i].func === func) {\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tevents.push({ func, once });\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Register event.\r\n\t * \r\n\t * @param type Event type.\r\n\t * @param func Callback when the event fires.\r\n\t * @return Returns itself for the method chaining.\r\n\t */\r\n\ton(type: string, func: EmitterCallback): Emitter {\r\n\t\treturn this._on(type, func, false);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Register one-time event.\r\n\t * \r\n\t * @param type Event type.\r\n\t * @param func Callback when the event fires.\r\n\t * @return Returns itself for the method chaining.\r\n\t */\r\n\tonce(type: string, func: EmitterCallback): Emitter {\r\n\t\treturn this._on(type, func, true);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Unregister event.\r\n\t * \r\n\t * @param type Event type.\r\n\t * @param func Registered callback.\r\n\t * @return Returns itself for the method chaining.\r\n\t */\r\n\toff(type: string, func: EmitterCallback): Emitter {\r\n\t\tif (!type || !func) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tconst events: IEmitterEvent[] = this._events[type] || [];\r\n\t\t\r\n\t\tfor (let i: number = 0; i < events.length; i++) {\r\n\t\t\tif (events[i].func === func) {\r\n\t\t\t\tevents.splice(i, 1);\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Emit event.\r\n\t * \r\n\t * @param type Event type to emit.\r\n\t * @param args Argument(s) in callback.\r\n\t * @return Returns itself for the method chaining.\r\n\t */\r\n\temit(type: string, ...args: any[]): Emitter {\r\n\t\tif (!type) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tconst events: IEmitterEvent[] = this._events[type] || [];\r\n\t\tconst use: IEmitterEvent[] = [];\r\n\t\t\r\n\t\tfor (let i: number = events.length - 1; i >= 0; i--) {\r\n\t\t\tconst ev: IEmitterEvent = events[i];\r\n\t\t\t\r\n\t\t\tif (ev.once) {\r\n\t\t\t\tevents.splice(i, 1);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tuse.push(ev);\r\n\t\t}\r\n\t\t\r\n\t\tfor (let i: number = use.length - 1; i >= 0; i--) {\r\n\t\t\tuse[i].func.apply(this, args);\r\n\t\t}\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Emit event with specifying a context.\r\n\t * \r\n\t * @param type Event type to emit.\r\n\t * @param context 'this' context in callback.\r\n\t * @param args Argument(s) in callback.\r\n\t * @return Returns itself for the method chaining.\r\n\t */\r\n\tcemit(type: string, context: any, ...args: any[]): Emitter {\r\n\t\tif (!type || context == null) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tconst events: IEmitterEvent[] = this._events[type] || [];\r\n\t\tconst use: IEmitterEvent[] = [];\r\n\t\t\r\n\t\tfor (let i: number = events.length - 1; i >= 0; i--) {\r\n\t\t\tconst ev: IEmitterEvent = events[i];\r\n\t\t\t\r\n\t\t\tif (ev.once) {\r\n\t\t\t\tevents.splice(i, 1);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tuse.push(ev);\r\n\t\t}\r\n\t\t\r\n\t\tfor (let i: number = use.length - 1; i >= 0; i--) {\r\n\t\t\tuse[i].func.apply(context, args);\r\n\t\t}\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Remove events grouped event type.\r\n\t * \r\n\t * @param type Event type to remove.<br>If it is empty, removes all events.\r\n\t * @return Returns itself for the method chaining.\r\n\t */\r\n\tclear(type: string=''): Emitter {\r\n\t\tif (this._events[type]) {\r\n\t\t\tdelete(this._events[type]);\r\n\t\t} else {\r\n\t\t\tthis._events = {};\r\n\t\t}\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n}"],"names":["Emitter","this","prototypeAccessors","eventNames","Object","keys","_events","_on","type","func","once","const","events","let","i","length","push","on","off","splice","emit","use","ev","apply","args","cemit","context","clear"],"mappings":";;;;;;;;QAeaA,UAAb;QACSC,eAAkB;;;;;;;IAM1BC,mBAAIC;QACH,OAAOC,OAAOC,KAAKJ,KAAKK;;sBAWjBC,mBAAIC,MAAcC,MAAuBC;QAChD,KAAKF,SAASC;YACb,OAAOR;;QAGRU,IAAMC,SAA0BX,KAAKK,QAAQE,QAAQP,KAAKK,QAAQE,SAAS;QAE3E,KAAKK,IAAIC,IAAY,GAAGA,IAAIF,OAAOG,QAAQD;YAC1C,IAAIF,OAAOE,GAAGL,SAASA;gBACtB,OAAOR;;;QAITW,OAAOI,KAAK;kBAAEP;kBAAMC;;QAEpB,OAAOT;;sBAURgB,iBAAGT,MAAcC;QAChB,OAAOR,KAAKM,IAAIC,MAAMC,MAAM;;sBAU7BC,qBAAKF,MAAcC;QAClB,OAAOR,KAAKM,IAAIC,MAAMC,MAAM;;sBAU7BS,mBAAIV,MAAcC;QACjB,KAAKD,SAASC;YACb,OAAOR;;QAGRU,IAAMC,SAA0BX,KAAKK,QAAQE,SAAS;QAEtD,KAAKK,IAAIC,IAAY,GAAGA,IAAIF,OAAOG,QAAQD;YAC1C,IAAIF,OAAOE,GAAGL,SAASA,MAAM;gBAC5BG,OAAOO,OAAOL,GAAG;gBACjB,OAAOb;;;QAIT,OAAOA;;sBAURmB,qBAAKZ;;;;;QACJ,KAAKA;YACJ,OAAOP;;QAGRU,IAAMC,SAA0BX,KAAKK,QAAQE,SAAS;QACtDG,IAAMU,MAAuB;QAE7B,KAAKR,IAAIC,IAAYF,OAAOG,SAAS,GAAGD,KAAK,GAAGA,KAAK;YACpDH,IAAMW,KAAoBV,OAAOE;YAEjC,IAAIQ,GAAGZ;gBACNE,OAAOO,OAAOL,GAAG;;YAGlBO,IAAIL,KAAKM;;QAGV,KAAKT,IAAIC,MAAYO,IAAIN,SAAS,GAAGD,OAAK,GAAGA;YAC5CO,IAAIP,KAAGL,KAAKc,MAAMtB,MAAMuB;;QAGzB,OAAOvB;;sBAWRwB,uBAAMjB,MAAckB;;;;;QACnB,KAAKlB,QAAmB,QAAXkB;YACZ,OAAOzB;;QAGRU,IAAMC,SAA0BX,KAAKK,QAAQE,SAAS;QACtDG,IAAMU,MAAuB;QAE7B,KAAKR,IAAIC,IAAYF,OAAOG,SAAS,GAAGD,KAAK,GAAGA,KAAK;YACpDH,IAAMW,KAAoBV,OAAOE;YAEjC,IAAIQ,GAAGZ;gBACNE,OAAOO,OAAOL,GAAG;;YAGlBO,IAAIL,KAAKM;;QAGV,KAAKT,IAAIC,MAAYO,IAAIN,SAAS,GAAGD,OAAK,GAAGA;YAC5CO,IAAIP,KAAGL,KAAKc,MAAMG,SAASF;;QAG5B,OAAOvB;;sBASR0B,uBAAMnB;;mBAAa;;QAClB,IAAIP,KAAKK,QAAQE;mBACTP,KAAKK,QAAQE;;YAEpBP,KAAKK,UAAU;;QAGhB,OAAOL;;;;"}